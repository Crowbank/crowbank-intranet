"""Create comprehensive database schema

Revision ID: b74a54ba40b5
Revises: 86ca15789c6a
Create Date: 2025-05-14 16:18:34.414509

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b74a54ba40b5'
down_revision: Union[str, None] = '86ca15789c6a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create tables in correct dependency order to avoid foreign key issues
    op.create_table('species',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    
    op.create_table('breed_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('species_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('breeds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('short_name', sa.String(length=30), nullable=True),
    sa.Column('species_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['breed_categories.id'], ),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Now create other tables in order
    op.create_table('boarding_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('wing', sa.String(length=50), nullable=True),
    sa.Column('side', sa.String(length=50), nullable=True),
    sa.Column('type', sa.Enum('DOG_STANDARD', 'DOG_DELUXE', 'DOG_DOUBLE', 'CATTERY', name='boardingtype'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('position', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('hire_date', sa.Date(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('form_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('NEW_DOG_QUESTIONNAIRE', 'DAYCARE_APPLICATION', 'PUPPY_CLASS_REGISTRATION', 'CHECKIN_FORM', 'BOOKING_INTENT', 'EMPLOYEE_STARTER', name='formtype'), nullable=False),
    sa.Column('entity_type', sa.Enum('PET', 'BOOKING', 'CUSTOMER', 'EMPLOYEE', name='entitytype'), nullable=False),
    sa.Column('gravity_form_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('insurance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('policy_number', sa.String(length=50), nullable=True),
    sa.Column('provider', sa.String(length=100), nullable=False),
    sa.Column('coverage_level', sa.String(length=100), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('renewal_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('media_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('PHOTO', 'VIDEO', name='mediatype'), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('object_key', sa.String(length=255), nullable=False),
    sa.Column('bucket_name', sa.String(length=100), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('thumbnail_key', sa.String(length=255), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('public_url', sa.String(length=1000), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.Column('capture_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('pets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('sex', sa.String(length=1), nullable=True),
    sa.Column('neutered', sa.Boolean(), nullable=False),
    sa.Column('microchip', sa.String(length=30), nullable=True),
    sa.Column('deceased', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('warning', sa.Text(), nullable=True),
    sa.Column('feeding_notes', sa.Text(), nullable=True),
    sa.Column('medical_notes', sa.Text(), nullable=True),
    sa.Column('behavior_notes', sa.Text(), nullable=True),
    sa.Column('friends_allowed', sa.Boolean(), nullable=False),
    sa.Column('daycare_approved', sa.Boolean(), nullable=False),
    sa.Column('distinguishing_marks', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('species_id', sa.Integer(), nullable=False),
    sa.Column('breed_id', sa.Integer(), nullable=True),
    sa.Column('vet_id', sa.Integer(), nullable=True),
    sa.Column('insurance_id', sa.Integer(), nullable=True),
    sa.Column('primary_photo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['breed_id'], ['breeds.id'], ),
    sa.ForeignKeyConstraint(['insurance_id'], ['insurance.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['primary_photo_id'], ['media_files.id'], ),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.ForeignKeyConstraint(['vet_id'], ['vets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pet_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.Column('type', sa.Enum('VACCINATION', 'INSTRUCTIONS', 'MEDICATION_SHEET', 'VET_VISIT_SHEET', 'OTHER', name='documenttype'), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('object_key', sa.String(length=255), nullable=True),
    sa.Column('bucket_name', sa.String(length=100), nullable=True),
    sa.Column('content_type', sa.String(length=100), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('public_url', sa.String(length=1000), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('form_fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('field_key', sa.String(length=50), nullable=False),
    sa.Column('label', sa.String(length=255), nullable=False),
    sa.Column('field_type', sa.Enum('TEXT', 'TEXTAREA', 'NUMBER', 'DATE', 'SELECT', 'MULTISELECT', 'CHECKBOX', 'RADIO', 'FILE', 'EMAIL', 'PHONE', 'ADDRESS', name='fieldtype'), nullable=False),
    sa.Column('required', sa.Boolean(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('options', sa.JSON(), nullable=True),
    sa.Column('default_value', sa.Text(), nullable=True),
    sa.Column('help_text', sa.Text(), nullable=True),
    sa.Column('gravity_field_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['form_templates.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('template_id', 'field_key', name='uix_template_field_key')
    )
    op.create_table('pet_condition_association',
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('condition_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['condition_id'], ['medical_conditions.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('pet_id', 'condition_id')
    )
    op.create_table('pet_media_association',
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['media_id'], ['media_files.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('pet_id', 'media_id')
    )
    op.create_table('pet_weights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('date_recorded', sa.Date(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('recorded_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.ForeignKeyConstraint(['recorded_by'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vaccinations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('validity_period', sa.Interval(), nullable=True),
    sa.Column('species_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('legacy_booking_no', sa.Integer(), nullable=True),
    sa.Column('arrival_date', sa.Date(), nullable=False),
    sa.Column('departure_date', sa.Date(), nullable=False),
    sa.Column('arrival_time', sa.Time(), nullable=True),
    sa.Column('departure_time', sa.Time(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'CHECKED_IN', 'CHECKED_OUT', 'CANCELLED', 'NO_SHOW', name='bookingstatus'), nullable=False),
    sa.Column('boarding_type', sa.Enum('STANDARD', 'DELUXE', 'CATTERY', 'DAYCARE', name='boardingtype'), nullable=False),
    sa.Column('special_instructions', sa.Text(), nullable=True),
    sa.Column('destination', sa.String(length=255), nullable=True),
    sa.Column('checked_in_at', sa.DateTime(), nullable=True),
    sa.Column('checked_out_at', sa.DateTime(), nullable=True),
    sa.Column('discount_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('total_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('deposit_paid', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('assigned_run_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_run_id'], ['boarding_runs.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('legacy_booking_no')
    )
    op.create_table('vaccination_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_administered', sa.Date(), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('vaccination_id', sa.Integer(), nullable=False),
    sa.Column('administered_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['administered_by_id'], ['vets.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.ForeignKeyConstraint(['vaccination_id'], ['vaccinations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('booking_pets',
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('requires_medication', sa.Boolean(), nullable=False),
    sa.Column('medication_instructions', sa.Text(), nullable=True),
    sa.Column('feeding_instructions', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('booking_id', 'pet_id')
    )
    op.create_table('daily_allocations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('allocation_date', sa.Date(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('boarding_run_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['boarding_run_id'], ['boarding_runs.id'], ),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('form_submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('entity_type', sa.Enum('PET', 'BOOKING', 'CUSTOMER', 'EMPLOYEE', name='entitytype'), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=True),
    sa.Column('booking_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('gravity_entry_id', sa.Integer(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.Column('submitted_by_id', sa.Integer(), nullable=True),
    sa.Column('is_complete', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.ForeignKeyConstraint(['submitted_by_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['form_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('form_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('object_key', sa.String(length=255), nullable=False),
    sa.Column('bucket_name', sa.String(length=100), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['field_id'], ['form_fields.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['form_submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('form_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.Column('text_value', sa.Text(), nullable=True),
    sa.Column('number_value', sa.Integer(), nullable=True),
    sa.Column('json_value', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['field_id'], ['form_fields.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['form_submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('contacts', sa.Column('county', sa.String(length=50), nullable=True))
    op.alter_column('contacts', 'street',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.alter_column('contacts', 'town',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('contacts', 'postcode',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=10),
               existing_nullable=True)
    op.create_unique_constraint('uix_customer_contact', 'customer_contacts', ['customer_id', 'contact_id'])
    op.add_column('customers', sa.Column('county', sa.String(length=50), nullable=True))
    op.alter_column('customers', 'street',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.alter_column('customers', 'town',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('customers', 'postcode',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=10),
               existing_nullable=True)
    op.add_column('vets', sa.Column('county', sa.String(length=50), nullable=True))
    op.add_column('pets', sa.Column('vaccination_document_id', sa.Integer(), nullable=True))
    op.create_foreign_key('fk_pets_vaccination_document', 'pets', 'pet_documents', ['vaccination_document_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_pets_vaccination_document', 'pets', type_='foreignkey')
    op.drop_column('pets', 'vaccination_document_id')
    
    op.drop_column('vets', 'county')
    op.alter_column('customers', 'postcode',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.alter_column('customers', 'town',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.alter_column('customers', 'street',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.drop_column('customers', 'county')
    op.drop_constraint('uix_customer_contact', 'customer_contacts', type_='unique')
    op.alter_column('contacts', 'postcode',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.alter_column('contacts', 'town',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.alter_column('contacts', 'street',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.drop_column('contacts', 'county')
    op.drop_table('form_responses')
    op.drop_table('form_files')
    op.drop_table('form_submissions')
    op.drop_table('daily_allocations')
    op.drop_table('booking_pets')
    op.drop_table('vaccination_events')
    op.drop_table('bookings')
    op.drop_table('vaccinations')
    op.drop_table('pet_weights')
    op.drop_table('pet_media_association')
    op.drop_table('pet_condition_association')
    op.drop_table('form_fields')
    op.drop_table('pet_documents')
    op.drop_table('pets')
    op.drop_table('breeds')
    op.drop_table('breed_categories')
    op.drop_table('species')
    op.drop_table('media_files')
    op.drop_table('insurance')
    op.drop_table('form_templates')
    op.drop_table('employees')
    op.drop_table('boarding_runs')
    # ### end Alembic commands ###
